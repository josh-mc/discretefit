// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// chisq_gof_cpp
double chisq_gof_cpp(IntegerVector vector_1, IntegerVector vector_2, double reps);
RcppExport SEXP _discretefit_chisq_gof_cpp(SEXP vector_1SEXP, SEXP vector_2SEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vector_2(vector_2SEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisq_gof_cpp(vector_1, vector_2, reps));
    return rcpp_result_gen;
END_RCPP
}
// compute_vec_1_frac
NumericVector compute_vec_1_frac(IntegerVector vector_1, IntegerVector uni_2, int n_bins, NumericVector vec_2_frac);
RcppExport SEXP _discretefit_compute_vec_1_frac(SEXP vector_1SEXP, SEXP uni_2SEXP, SEXP n_binsSEXP, SEXP vec_2_fracSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type uni_2(uni_2SEXP);
    Rcpp::traits::input_parameter< int >::type n_bins(n_binsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_2_frac(vec_2_fracSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_vec_1_frac(vector_1, uni_2, n_bins, vec_2_frac));
    return rcpp_result_gen;
END_RCPP
}
// ks_gof_cpp
double ks_gof_cpp(NumericVector vector_1, NumericVector vec_2_frac, double reps);
RcppExport SEXP _discretefit_ks_gof_cpp(SEXP vector_1SEXP, SEXP vec_2_fracSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_2_frac(vec_2_fracSEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(ks_gof_cpp(vector_1, vec_2_frac, reps));
    return rcpp_result_gen;
END_RCPP
}
// ors_gof_cpp
double ors_gof_cpp(IntegerVector vector_1, IntegerVector vector_2, double reps);
RcppExport SEXP _discretefit_ors_gof_cpp(SEXP vector_1SEXP, SEXP vector_2SEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vector_2(vector_2SEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(ors_gof_cpp(vector_1, vector_2, reps));
    return rcpp_result_gen;
END_RCPP
}
// rms_stat
double rms_stat(IntegerVector vector_1, IntegerVector vector_2);
RcppExport SEXP _discretefit_rms_stat(SEXP vector_1SEXP, SEXP vector_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vector_2(vector_2SEXP);
    rcpp_result_gen = Rcpp::wrap(rms_stat(vector_1, vector_2));
    return rcpp_result_gen;
END_RCPP
}
// rms_gof_cpp
double rms_gof_cpp(IntegerVector vector_1, IntegerVector vector_2, double reps);
RcppExport SEXP _discretefit_rms_gof_cpp(SEXP vector_1SEXP, SEXP vector_2SEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vector_2(vector_2SEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(rms_gof_cpp(vector_1, vector_2, reps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_discretefit_chisq_gof_cpp", (DL_FUNC) &_discretefit_chisq_gof_cpp, 3},
    {"_discretefit_compute_vec_1_frac", (DL_FUNC) &_discretefit_compute_vec_1_frac, 4},
    {"_discretefit_ks_gof_cpp", (DL_FUNC) &_discretefit_ks_gof_cpp, 3},
    {"_discretefit_ors_gof_cpp", (DL_FUNC) &_discretefit_ors_gof_cpp, 3},
    {"_discretefit_rms_stat", (DL_FUNC) &_discretefit_rms_stat, 2},
    {"_discretefit_rms_gof_cpp", (DL_FUNC) &_discretefit_rms_gof_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_discretefit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
