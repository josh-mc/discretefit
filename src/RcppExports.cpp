// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// chisq_gof_cpp
double chisq_gof_cpp(NumericVector vector_1, NumericVector vec_2_frac, double reps);
RcppExport SEXP _discretefit_chisq_gof_cpp(SEXP vector_1SEXP, SEXP vec_2_fracSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_2_frac(vec_2_fracSEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(chisq_gof_cpp(vector_1, vec_2_frac, reps));
    return rcpp_result_gen;
END_RCPP
}
// ks_gof_cpp
double ks_gof_cpp(NumericVector vector_1, NumericVector vec_2_frac, double reps);
RcppExport SEXP _discretefit_ks_gof_cpp(SEXP vector_1SEXP, SEXP vec_2_fracSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_2_frac(vec_2_fracSEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(ks_gof_cpp(vector_1, vec_2_frac, reps));
    return rcpp_result_gen;
END_RCPP
}
// rms_gof_cpp
double rms_gof_cpp(NumericVector vector_1, NumericVector vec_2_frac, double reps);
RcppExport SEXP _discretefit_rms_gof_cpp(SEXP vector_1SEXP, SEXP vec_2_fracSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_2_frac(vec_2_fracSEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(rms_gof_cpp(vector_1, vec_2_frac, reps));
    return rcpp_result_gen;
END_RCPP
}
// simulate_p
double simulate_p(int type, NumericVector vector_1, NumericVector vec_2_frac, double reps);
RcppExport SEXP _discretefit_simulate_p(SEXP typeSEXP, SEXP vector_1SEXP, SEXP vec_2_fracSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vector_1(vector_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_2_frac(vec_2_fracSEXP);
    Rcpp::traits::input_parameter< double >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_p(type, vector_1, vec_2_frac, reps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_discretefit_chisq_gof_cpp", (DL_FUNC) &_discretefit_chisq_gof_cpp, 3},
    {"_discretefit_ks_gof_cpp", (DL_FUNC) &_discretefit_ks_gof_cpp, 3},
    {"_discretefit_rms_gof_cpp", (DL_FUNC) &_discretefit_rms_gof_cpp, 3},
    {"_discretefit_simulate_p", (DL_FUNC) &_discretefit_simulate_p, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_discretefit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
